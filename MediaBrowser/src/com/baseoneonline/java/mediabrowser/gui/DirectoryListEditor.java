/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DirectoryListEditor.java
 *
 * Created on Sep 5, 2010, 11:31:23 AM
 */

package com.baseoneonline.java.mediabrowser.gui;

import java.io.File;
import java.util.ArrayList;

import javax.swing.JFileChooser;

import com.baseoneonline.java.mediabrowser.util.ArrayListModel;

/**
 * 
 * @author bmod
 */
public class DirectoryListEditor extends javax.swing.JPanel {

	private final ArrayListModel<File> directories = new ArrayListModel<File>();

	private final ArrayList<Listener> listeners = new ArrayList<Listener>();

	/** Creates new form DirectoryListEditor */
	public DirectoryListEditor() {
		initComponents();
	}

	public void addListener(final Listener l) {
		if (!listeners.contains(l))
			listeners.add(l);
	}

	public void removeListener(final Listener l) {
		listeners.remove(l);
	}

	public ArrayList<File> getDirectories() {
		return directories;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDirectories = new javax.swing.JList();
        btRemove = new javax.swing.JButton();

        btAdd.setText("Add...");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        listDirectories.setModel(directories);
        listDirectories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listDirectoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listDirectories);

        btRemove.setText("Remove");
        btRemove.setEnabled(false);
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemove)
                        .addGap(95, 95, 95))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdd)
                    .addComponent(btRemove))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void btAddActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btAddActionPerformed
		final JFileChooser fc = new JFileChooser();
		fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		if (JFileChooser.APPROVE_OPTION == fc.showOpenDialog(this)) {
			final File dir = fc.getSelectedFile();
			directories.add(dir);
			fireDataChanged();
		}
	}// GEN-LAST:event_btAddActionPerformed

	private void listDirectoriesValueChanged(
			final javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_listDirectoriesValueChanged
		final boolean hasSelection =
				listDirectories.getSelectedIndices().length > 0;
		btRemove.setEnabled(hasSelection);
	}// GEN-LAST:event_listDirectoriesValueChanged

	private void btRemoveActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btRemoveActionPerformed
		for (final Object dir : listDirectories.getSelectedValues()) {
			directories.remove(dir);
		}
		fireDataChanged();
	}// GEN-LAST:event_btRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listDirectories;
    // End of variables declaration//GEN-END:variables

	public void setDirectories(final ArrayList<File> arrayList) {
		directories.clear();
		for (final File dir : arrayList) {
			directories.add(dir);
		}
	}

	private void fireDataChanged() {
		for (final Listener l : listeners) {
			l.dataChanged();
		}
	}

	// End of variables declaration

	public static interface Listener {

		public void dataChanged();

	}

}
